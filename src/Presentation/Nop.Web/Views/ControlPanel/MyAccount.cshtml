@model Nop.Web.Models.ControlPanel.MyAccountModel
@using Nop.Web.Models.Customer;
@using Nop.Core;
@{
    Layout = "~/Views/Shared/_PanelLayoutTwo.cshtml";
    Html.AddTitleParts(T("PageTitle.Account").Text);
}


<div id="divMainSection" class="panel-control">
    <h2 class="tit_sec">@T("Account.MyAccount") - @T("Account.CustomerInfo")</h2>
    <p>@T("Account.DescriptionSection")</p>

    @using (Html.BeginForm())
    {


        @Html.AntiForgeryToken()
        <div class="message-error">
            @Html.ValidationSummary(true)
        </div>


        <div class="title">@T("Account.YourPersonalDetails")</div>
        <div class="form-public">
            <div class="inputs">
                @Html.LabelFor(model => model.FirstName, new { }, ":")
                @Html.EditorFor(model => model.FirstName)
                @Html.RequiredHint()
                @Html.ValidationMessageFor(model => model.FirstName)
            </div>
        </div>
        <div class="inputs">
            @Html.LabelFor(model => model.LastName, new { }, ":")
            @Html.EditorFor(model => model.LastName)
            @Html.RequiredHint()
            @Html.ValidationMessageFor(model => model.LastName)
        </div>

        <div class="inputs">
            @Html.LabelFor(model => model.Email, new { }, ":")
            @Html.EditorFor(model => model.Email)
            @Html.RequiredHint()
            @Html.ValidationMessageFor(model => model.Email)
        </div>
        <div class="inputs">
            @Html.LabelFor(model => model.StateProvinceId, new { }, ":")
            @Html.DropDownListFor(model => model.StateProvinceId, new SelectList(Model.States, "Id", "Name", Model.StateProvinceId), "-")
            @Html.RequiredHint()
            @Html.ValidationMessageFor(model => model.StateProvinceId)
        </div>
        <div class="inputs">
            @Html.LabelFor(model => model.Phone, new { }, ":")
            @Html.EditorFor(model => model.Phone, new { tuils_val = "int" })
            @Html.ValidationMessageFor(model => model.Phone)
        </div>
        <div class="inputs">
            @Html.LabelFor(model => model.Newsletter, new { }, ":")
            @Html.EditorFor(model => model.Newsletter)
            @Html.ValidationMessageFor(model => model.Newsletter)
        </div>

    <div class="inputs" id="divDateOfBirth">
        @Html.LabelFor(model => model.DateOfBirth, new { }, ":")
        <div class="date">
            @Html.TextBoxFor(model => model.DateOfBirth, "{0:MM/dd/yyyy}", new { tuils_val = "none" })
            <span class="icon-mail datepickerButton"></span>
        </div>
        @Html.RequiredHint()
        @Html.ValidationMessageFor(model => model.DateOfBirth)
    </div>

        <div class="inputs_date">
            <label class="label">@T("Account.Fields.Gender")</label>
            <div class="onoffswitch">
                <input type="checkbox" id="Gender" class="onoffswitch-checkbox" name="Gender" @(Model.Gender != null && Model.Gender.Equals("F") ? "checked" : string.Empty)>
                <label for="Gender" class="onoffswitch-label">
                    <span class="onoffswitch-inner"></span>
                    <span class="onoffswitch-switch"></span>
                </label>
            </div>
        </div>

        @Html.ActionLink(T("account.changepassword").Text, "ChangePassword", "Customer", new { }, new { @class = "btn_password" })
        <br>



        <div class="title">@T("Account.MyBike")</div>

        <div class="form-public">
            <div class="inputs">
                @Html.LabelFor(model => model.BikeBrandId, new { }, ":")
                @Html.DropDownListFor(model => model.BikeBrandId, new SelectList(Model.BikeBrands, "Id", "Name"), "-")

            </div>
            <div class="inputs">
                @Html.LabelFor(model => model.BikeReferenceId, new { }, ":")
                @Html.DropDownListFor(model => model.BikeReferenceId, new SelectList(Model.BikeReferences, "Id", "Name"), "-")
            </div>
            <div class="inputs">
                @Html.LabelFor(model => model.BikeYear, new { }, ":")
                @Html.DropDownNumbersFor(model => model.BikeYear, DateTime.Now.Year, 1980, "-")
            </div>
            <div class="inputs_mid">
                @Html.LabelFor(model => model.BikeCarriagePlate, new { }, ":")
                @Html.TextBoxFor(model => model.BikeCarriagePlate, new { maxLength = 7 })
                @Html.ValidationMessageFor(model => model.BikeCarriagePlate)
            </div>
            <br>
        </div>
        <div class="conte_check">
            @Html.EditorFor(model => model.NewsletterBrand) @Html.LabelFor(model => model.NewsletterBrand, new { }, ":")
            @Html.EditorFor(model => model.NewsletterReference) @Html.LabelFor(model => model.NewsletterReference, new { }, ":")
        </div>


        <input type="submit" value="@T("Common.Save")" name="save-info-button" class="btn_2 button-1 right" />

    }

</div>





