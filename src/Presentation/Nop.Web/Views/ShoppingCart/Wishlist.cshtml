@model WishlistModel
@using Nop.Core
@using Nop.Core.Domain.Tax
@using Nop.Core.Infrastructure
@using Nop.Web.Models.ShoppingCart
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";

    
    Html.AddTitleParts(T("PageTitle.Wishlist").Text);
}

<h2 class="tit_sec">

    @if (Model.IsEditable)
    {
        @T("Wishlist")
    }
    else
    {
        @String.Format(T("Wishlist.WishlistOf").Text, Model.CustomerFullname)
    }

</h2>
<div class="conte_sale">


    @if (Model.Items.Count > 0)
    {

        if (Model.Warnings.Count > 0)
        {
            <div class="message-error">
                <ul>
                    @foreach (var warning in Model.Warnings)
                    {
                        <li>@warning</li>
                    }
                </ul>
            </div>
        }

        using (Html.BeginRouteForm("Wishlist", FormMethod.Post))
        {

            <div class="table-header">
                @if (Model.IsEditable)
                {
                    <div class="td-cal">@T("ShoppingCart.Remove")</div>
                }
                @if (Model.ShowProductImages)
                {
                    <div class="td-img">img</div>
                }
                <div class="td-pdt">@T("ShoppingCart.Product(s)")</div>
                <div class="td-prec">@T("MyOrders.Price")</div>
                <br />
            </div>





            foreach (var item in Model.Items)
            {
                <li>
                    @if (Model.IsEditable)
                    {
                        <div class="td-cal">
                            <input type="checkbox" name="removefromcart" value="@(item.Id)" />
                        </div>
                    }



                    @if (Model.ShowProductImages)
                    {
                        <div class="td-img">
                            <img alt="@item.Picture.AlternateText" src="@item.Picture.ImageUrl" title="@item.Picture.Title" />
                        </div>
                    }

                    <div class="td-pdt">
                        <a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })">@item.ProductName</a>
                        @if (!String.IsNullOrEmpty(item.AttributeInfo))
                        {
                            <div class="attributes">
                                @Html.Raw(item.AttributeInfo)
                            </div>
                        }
                        @if (!String.IsNullOrEmpty(item.RecurringInfo))
                        {
                            <div class="recurring-info">
                                @Html.Raw(item.RecurringInfo)
                            </div>
                        }
                        @if (!String.IsNullOrEmpty(item.RentalInfo))
                        {
                            <div class="rental-info">
                                @Html.Raw(item.RentalInfo)
                            </div>
                        }
                        @if (item.Warnings.Count > 0)
                        {
                            <div class="message-error">
                                <ul>
                                    @foreach (var warning in item.Warnings)
                                    {
                                        <li>@warning</li>
                                    }
                                </ul>
                            </div>
                        }
                    </div>
                    <div class="td-prec">
                        <span class="product-subtotal">@item.SubTotal</span>
                        @if (!String.IsNullOrEmpty(item.Discount))
                        {
                            <div class="discount">
                                @T("ShoppingCart.ItemYouSave"): @item.Discount
                            </div>
                        }
                    </div>
                    <br />
                </li>

            }

            if (Model.Items.Count > 0 && Model.DisplayTaxShippingInfo)
            {
                var inclTax = EngineContext.Current.Resolve<IWorkContext>().TaxDisplayType == TaxDisplayType.IncludingTax;
                /*tax info is already included in the price (incl/excl tax). that's why we display only shipping info here
                of course, you can modify appropriate locales to include VAT info there*/
                <div class="tax-shipping-info">
                    @T(inclTax ? "Wishlist.TaxShipping.InclTax" : "Wishlist.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = Html.GetTopicSeName("shippinginfo") }))
                </div>
            }
            <div class="buttons">
                <div class="common-buttons">
                    @if (Model.IsEditable)
                    {
                        <input type="submit" name="updatecart" value="@T("Wishlist.UpdateCart")" class="button-2 update-wishlist-button" />
                    }
                    @if (Model.DisplayAddToCart)
                    {
                        <input type="submit" name="addtocartbutton" value="@T("ShoppingCart.AddToCart")" class="button-2 wishlist-add-to-cart-button" />
                    }
                    @if (Model.IsEditable && Model.EmailWishlistEnabled)
                    {
                        <input type="button" value="@T("Wishlist.EmailAFriend")" class="button-2 email-a-friend-wishlist-button" onclick="setLocation('@Url.RouteUrl("EmailWishlist")')" />
                    }
                </div>
            </div>

        }

    }
    else
    {
        <div>
            <h1>@T("Wishlist.CartIsEmpty")</h1>
        </div>
    }

    @if (Model.IsEditable && Model.Items.Count > 0)
    {
        <div class="share-info">
            <p>
                <span class="share-label">@T("Wishlist.YourWishlistURL"):</span>
            </p>
            <p>
                <a href="@Url.RouteUrl("Wishlist", new { customerGuid = Model.CustomerGuid })" class="share-link">@Url.RouteUrl("Wishlist", new { customerGuid = Model.CustomerGuid }, "http")</a>
            </p>
        </div>
    }


</div>