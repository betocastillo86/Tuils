@model RegisterModel
@using Nop.Web.Models.Customer;
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.Register").Text);
}
<script>
    $(document).on("ready", function () {
        $(".buttonVendorType").on("click", LoadRegisterForm);
        $("#back-button").on("click", back);

        function LoadRegisterForm(obj)
        {
            var vendorType = $(obj.target).attr("tuils-action");
            $("#VendorType").val(vendorType);
            $("#step1").hide();
            $("#step2").show();

            if(vendorType != 0)
                $("div[tuils-for='no-user']").show();
            else
                $("div[tuils-for='no-user']").hide();
        }

        function back()
        {
            $("#step2").hide();
            $("#step1").show();
        }

    });

    
</script>


@using (Html.BeginForm())
{
    <div id="step1">
        <div class="buttonVendorType" tuils-action="@Convert.ToInt32(Nop.Core.Domain.Vendors.VendorType.RepairShop)">Taller</div>
        <div class="buttonVendorType" tuils-action="@Convert.ToInt32(Nop.Core.Domain.Vendors.VendorType.Market)">Almacen</div>
        <div class="buttonVendorType" tuils-action="@Convert.ToInt32(Nop.Core.Domain.Vendors.VendorType.User)">Persona</div>
    </div>
    <div id="step2" style="display:none">
        @Html.AntiForgeryToken()
        <div class="page registration-page">
            <div class="page-title">
                <h1>@T("Account.Register")</h1>
            </div>
            <div class="page-body">
                <div class="message-error">
                    @Html.ValidationSummary(true)
                </div>
                @Html.Partial("_ExternalAuthentication.AssociateMessage")
                <div class="fieldset">
                    <div class="title">
                        <strong>@T("Account.YourPersonalDetails")</strong>
                    </div>
                    <div class="form-fields">
                        <div class="inputs">
                            @Html.LabelFor(model => model.FirstName, new { }, ":")
                            @Html.EditorFor(model => model.FirstName)
                            @Html.RequiredHint()
                            @Html.ValidationMessageFor(model => model.FirstName)
                        </div>
                        <div class="inputs">
                            @Html.LabelFor(model => model.LastName, new { }, ":")
                            @Html.EditorFor(model => model.LastName)
                            @Html.RequiredHint()
                            @Html.ValidationMessageFor(model => model.LastName)
                        </div>

                        <div class="inputs">
                            @Html.LabelFor(model => model.Email, new { }, ":")
                            @Html.EditorFor(model => model.Email)
                            @Html.RequiredHint()
                            @Html.ValidationMessageFor(model => model.Email)
                        </div>

                        <div class="inputs" tuils-for="no-user" style="display:none">
                            @Html.LabelFor(model => model.Company, new { }, ":")
                            @Html.EditorFor(model => model.Company)
                                @Html.RequiredHint()
                            @Html.ValidationMessageFor(model => model.Company)
                        </div>
                        <div class="inputs">
                            @Html.LabelFor(model => model.Password, new { }, ":")
                            @Html.EditorFor(model => model.Password)
                            @Html.RequiredHint()
                            @Html.ValidationMessageFor(model => model.Password)
                        </div>
                        <div class="inputs">
                            @Html.LabelFor(model => model.ConfirmPassword, new { }, ":")
                            @Html.EditorFor(model => model.ConfirmPassword)
                            @Html.RequiredHint()
                            @Html.ValidationMessageFor(model => model.ConfirmPassword)
                        </div>
                        @if (Model.DisplayCaptcha)
                        {
                            <div class="captcha-box">
                                @Html.Raw(Html.GenerateCaptcha())
                            </div>
                        }

                    </div>
                </div>


                @if (Model.AcceptPrivacyPolicyEnabled)
                {
                    <script type="text/javascript">
                    $(document).ready(function () {
                        $('#register-button').click(function () {
                            if ($('#accept-privacy-policy').is(':checked')) {
                                //do some stuff
                                return true;
                            }
                            else {
                                //just show validation errors, dont post
                                alert('@Html.Raw(HttpUtility.JavaScriptStringEncode(T("Account.Fields.AcceptPrivacyPolicy.Required").Text))');
                                return false;
                            }
                        });
                    });
                    </script>
                    <div class="accept-privacy-policy">
                        <input id="accept-privacy-policy" type="checkbox" name="accept-privacy-policy" />
                        <label for="accept-privacy-policy">@T("Account.Fields.AcceptPrivacyPolicy")</label>
                        <span class="read" onclick="javascript:OpenWindow('@Url.RouteUrl("TopicPopup", new { SystemName = "privacyinfo" })', 450, 500, true)">@T("Account.Fields.AcceptPrivacyPolicy.Read")</span>
                    </div>
                }
                <div class="buttons">
                    <input type="submit" id="register-button" class="button-1 register-next-step-button" value="@T("Account.Register.Button")" name="register-button" />
                    <input type="button" id="back-button" class="button-1 register-next-step-button" value="@T("Account.Register.Back")" name="register-button" />
                    @Html.HiddenFor(m => m.VendorType)
                </div>
            </div>
        </div>
    </div>
   
}