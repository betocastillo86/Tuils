@model QuestionsModel
@using Nop.Web.Models.Catalog;
@{
    Layout = null;
}
@*edited*@
<div class="page product-questions-page" id="product-questions-page">

    <div class="page-body">
        

        <div class="write-review" id="question-form" >
            
                <div class="message-error">@Html.ValidationSummary(true)</div>
                <div class="form-fields">
                    @Html.TextAreaRequiredFor(model => model.NewQuestion.QuestionText, htmlAttributes: new { @class = "review-text" }, labelText: T("Questions.Write").Text, required:false )
                    @Html.Hidden("productId", Model.ProductId)

                    @if(Model.ShowCaptcha)
                    {
                       <div class="captcha-box">
                         @Html.Raw(Html.GenerateCaptcha())
                       </div> 
                    }
                    
                </div>
                <div class="buttons">
                    <input type="button" name="add-question" class="button-1 write-product-review-button" value="@T("Questions.SubmitButton")" />
                </div>
            
        </div>
        <div id="divQuestionPublished" style="display:none">
          <span>@T("Questions.QuestionPublished")</span>  
        </div>

        @if (Model.Questions.Count > 0)
        {
            <br/>
            <div class="product-review-list">
                @*<div class="title">
                        @T("Reviews.ExistingReviews")
                    </div>*@
                @foreach (var question in Model.Questions)
                {
                    <div class="product-review-item">
                        <div class="clear">
                        </div>
                        <div class="question-text">
                            <div class="review-text">
                                <span class="icon-msj"></span>
                                <span class="txt-quest">@Html.Raw(Nop.Core.Html.HtmlHelper.FormatText(question.QuestionText, false, true, false, false, false, false)) <b class="quest-info"> - @T("Questions.Date"): @question.CreatedOnStr</b></span>
                                <br/>
                            </div>

                            @if (!string.IsNullOrEmpty(question.AnswerText))
                            { 
                                <div class="question-resp">
                                    <span class="icon-msj2"></span> 
                                    <span class="txt-quest">@Html.Raw(Nop.Core.Html.HtmlHelper.FormatText(question.AnswerText, false, true, false, false, false, false)) <b class="quest-info"> - @T("Questions.AnsweredDate"): @question.AnsweredOnStr</b></span>
                                    <br/>
                                </div>
                            }
                        </div>
                        <div class="clear">
                        </div>
                    </div>
                }
            </div>
        }
        else
        { 
        <div>@T("Questions.NoQuestions")</div>
        }

    </div>
</div>
