@model VendorModel
@{
    Layout = "~/Views/Shared/_ColumnsOne.cshtml";
    Html.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);

    var canonicalUrlsEnabled = EngineContext.Current.Resolve<SeoSettings>().CanonicalUrlsEnabled;
    if (canonicalUrlsEnabled)
    {
        var vendorUrl = Url.RouteUrl("Vendor", new { SeName = Model.SeName }, this.Request.Url.Scheme);
        Html.AddCanonicalUrlParts(vendorUrl);
    }

    Html.AppendCssFileParts("~/Content/magnific-popup/magnific-popup.css");
}
@using Nop.Core.Domain.Seo;
@using Nop.Core.Infrastructure;
@using Nop.Web.Models.Catalog;
@using Nop.Web.Extensions;


<link href="" rel="stylesheet" />
<div id="divMainSection">
    @Html.Hidden("VendorId", Model.Id)
    @Html.HiddenFor(m => m.AllowEdit)
    <div id="divHeaderVendor">
        @Html.Partial("_Vendor.Header", Model)
    </div>
    <div class="master-wrapper-page container hd">
        <div class="master-wrapper-content">
            <div class="master-wrapper-main">

                <div class="col-sedes">
                    <div id="divOffices">
                        @Html.Partial("VendorOffices")
                    </div>
                    <ul class="conte-spc">
                        @if (Model.SpecialCategories.Count == 0)
                        {
                            <div class="spc-noresult">
                                <span class="icon-tool"></span>
                                @if (Model.AllowEdit)
                                {
                                    <p>@T("Vendor.Services.NoRows.Own")</p>
                                    <a href="@Url.Action("VendorServices", "ControlPanel")" title="@T("Vendor.vendorServices.services.edit")" class="button-1">@T("Vendor.vendorServices.services.button")</a>
                                }
                                else
                                {
                                    <p>@T("Vendor.Services.NoRows.Other", Model.Name)</p>
                                }

                            </div>
                        }
                        else
                        {
                            <h3 title="@T("Vendor.vendorServices.services.title", Model.Name)">
                                @T("Vendor.SpecialCategoriesServices")

                                @if (Model.AllowEdit)
                                {
                                    <a href="@Url.Action("VendorServices", "ControlPanel")" title="@T("Vendor.vendorServices.services.edit")"><span class="icon-edit"></span></a>
                                }

                            </h3>
                            foreach (var special in Model.SpecialCategories.Where(sc => sc.SpecialType == Nop.Core.Domain.Vendors.SpecialCategoryVendorType.SpecializedCategory))
                            {
                                <li><a href="@Url.RouteUrl("Category", new { SeName = special.CategorySeName })" title="@special.CategoryName">@special.CategoryName</a></li>
                            }
                            <h3 title="@T("Vendor.vendorServices.bikes.title", Model.Name)">
                                @T("Vendor.SpecialCategoriesBikes")

                                @if (Model.AllowEdit)
                                {
                                    <a href="@Url.Action("VendorServices", "ControlPanel")" title="@T("Vendor.vendorServices.bikes.edit")"><span class="icon-edit"></span></a>
                                }
                            </h3>
                            foreach (var special in Model.SpecialCategories.Where(sc => sc.SpecialType == Nop.Core.Domain.Vendors.SpecialCategoryVendorType.BikeBrand))
                            {
                                <li><a href="@Url.RouteUrl("Category", new { SeName = special.CategorySeName })" title="@special.CategoryName">@special.CategoryName</a></li>
                            }
                        }


                    </ul>
                </div>
                <div class="col-producto">
                    <div class="product-grid">
                        <div class="title"> <strong>Productos</strong> </div>
                        <div class="search-pdt">
                            <input type="text" class="searchinput" value="@Model.PagingFilteringContext.q" />
                            <a class="btn_search"><span class="icon-lupa"></span></a>
                        </div>


                        @if (Model.Products.Count > 0)
                        {
                            @*grid mode*@
                            <div class="product-grid">
                                
                                @if (!Model.FilteredByProduct)
                                {
                                    foreach (var product in Model.Products)
                                    {
                                        <div class="item-box">
                                            @Html.Partial("_ProductBox", product)
                                        </div>
                                    }
                                }
                                else
                                {
                                    var product = Model.Products.FirstOrDefault();
                                    <div class="product-sale">
                                            <h1><a href="@Url.RouteUrl("Product", new { seName = product.SeName })">@product.Name</a></h1>
                                            <div class="picture"><a href="@Url.RouteUrl("Product", new { seName = product.SeName })"><img src="@product.DefaultPictureModel.ImageUrl" /></a></div>
                                            <div class="descript_pro">
                                                <div class="product-price">@product.ProductPrice.Price</div>
                                                <p>@Html.Raw(product.FullDescription)</p>
                                                <div class="product-infopluss">
                                                    <h3>@T("product.additionalInfo")</h3>

                                                    @if (product.SpecificationAttributeModels.Count > 0)
                                                    {
                                                        @T("Products.Specs")
                                                        <ul>
                                                            @foreach (var spec in product.SpecificationAttributeModels)
                                                            {
                                                                <li>@spec.SpecificationAttributeName : @spec.ValueRaw</li>
                                                            }
                                                        </ul>
                                                    }
                                                    @if (product.Manufacturers.Count > 0)
                                                    {
                                                        var manufacturer = product.Manufacturers.FirstOrDefault();
                                                        <div class="manufacturers">
                                                            <span class="label">@T("Products.Manufacturer"):</span>
                                                            <span class="value">
                                                                <a href="@Url.RouteUrl("Manufacturer", new { SeName = manufacturer.SeName })">@manufacturer.Name</a>
                                                            </span>
                                                        </div>
                                                    }
                                                    
                                                </div>
                                            </div>
                                            <br/>
                                        </div>

                                    <div style="margin:20px 0 10px;">Si quieres ver todos los productos de <b>@Model.Name</b> </div>
                                    <a class="button-1" href="@Url.RouteUrl("Vendor", new { seName = Model.SeName })">Ver aquí</a>
                                }
                                
                               
                            </div>
                        }
                        else
                        {
                            <div class="no-result" style="font-size:16px;">
                                @T("Vendor.products.noResults", Model.Name)
                            @if (Model.AllowEdit)
                            {
                                <a class="btn-result" href="@Url.Action("Index", "Sales")">@T("Vendor.products.noResults.publish")</a>
                            }

                        </div>

                        }

                        <div class="pager">
                            @Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber")
                        </div>


                    </div>
                </div>
                <br />
                @*Input que ayuda a backbone saber si se encuentra en el vendedor o no*@
                <input id="vendorPageBB" value="1" type="hidden" />
                @*<div class="conte-comment">
                    @Html.Partial("_Vendor.Reviews")
                </div>*@
            </div>
        </div>
    </div>





</div>
