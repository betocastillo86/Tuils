@model SearchModel
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";

    Html.AddTitleParts(Model.Title);
}
@using Nop.Web.Models.Catalog;
@using Nop.Web.Extensions;

@*<script type="text/javascript">
        $(document).ready(function () {

            $("#@Html.FieldIdFor(model => model.As)").click(toggleAdvancedSearch);

            toggleAdvancedSearch();
        });

        function toggleAdvancedSearch() {

            if ($('#@Html.FieldIdFor(model => model.As)').is(':checked')) {
                $('#advanced-search-block').show();
            }
            else {
                $('#advanced-search-block').hide();
            }
        }
    </script>*@
<div id="divMainSection">


    @section left {
        @Html.Partial("_FilterSearches", Model.PagingFilteringContext)
    }
    <div class="page search-page">
        <div class="page-title">
            <h1>@T("Search")</h1>
        </div>
        @if (Model.ShowSimilarSearches)
        { 
            @Html.Action("SimilarSearches")
        }
        
        <div class="page-body">
            <div class="product-selectors">
                @*view mode*@
                @if (Model.PagingFilteringContext.AllowProductViewModeChanging && Model.Products.Count > 0)
                {
                    @*edited*@
                    <div class="product-viewmode">
                        <a rel="nofollow" class="fontawesome-th" href="@Model.PagingFilteringContext.AvailableViewModes.First().Value"></a>
                        <a rel="nofollow" class="fontawesome-reorder" href="@Model.PagingFilteringContext.AvailableViewModes.Last().Value"></a>
                    </div>
                    <script>
                        $(document).ready(function () {
                            $('div.product-list').length ? $('.fontawesome-reorder').addClass('active') : $('.fontawesome-th').addClass('active');
                        });
                    </script>
                    @*edited*@

                    @*<div class="product-viewmode">
                            <span>@T("Catalog.ViewMode")</span>
                            @Html.DropDownList("products-viewmode", Model.PagingFilteringContext.AvailableViewModes, new { onchange = "setLocation(this.value);" })
                        </div>*@
                }
                @*sorting*@
                @if (Model.PagingFilteringContext.AllowProductSorting && Model.Products.Count > 0)
                {
                    <div class="product-sorting">
                        <span><a href="javascript:;">@T("Catalog.OrderBy")</a></span>
                        @Html.DropDownList("products-orderby", Model.PagingFilteringContext.AvailableSortOptions, new { onchange = "setLocation(this.value);" })
                    </div>
                }
                @if (Model.IsMobileDevice)
                { 
                    <div id="product-filter-mobile">
                        <span><button id="btnFilterByMobile">@T("Catalog.FilterBy")</button></span>
                    </div>
                }
                @*page size*@
                    @*@if (Model.PagingFilteringContext.AllowCustomersToSelectPageSize && Model.Products.Count > 0)
                        {
                            <div class="product-page-size">
                                <span>@T("Catalog.PageSize")</span>
                                @Html.DropDownList("products-pagesize", Model.PagingFilteringContext.PageSizeOptions, new { onchange = "setLocation(this.value);" })
                                <span>@T("Catalog.PageSize.PerPage")</span>
                            </div>
                        }*@
                </div>
                @*added*@
                @if (Model.PagingFilteringContext.AllowCustomersToSelectPageSize && Model.Products.Count > 0)
                {
                    <div class="product-page-size">
                        <span>@T("Catalog.PageSize")</span>
                        @foreach (var per in Model.PagingFilteringContext.PageSizeOptions)
                        {
                            <a href="@per.Value" rel="nofollow">@per.Text</a>
                        }
                        <span>@T("Catalog.PageSize.PerPage")</span>
                    </div>
                }
                @*@added*@
                <div class="search-results">
                    @if (!String.IsNullOrEmpty(Model.Warning))
                    {
                        <strong class="warning">
                            @Model.Warning
                        </strong>
                    }
                    @if (Model.NoResults)
                    {
                        <div class="no-result">
                            @T("Search.NoResultsText")
                        </div>
                    }
                    @*product list*@
                    @if (Model.Products.Count > 0)
                    {
                        if (Model.PagingFilteringContext.ViewMode == "list")
                        {
                            @*list mode*@
                            <div class="product-list">
                                @foreach (var product in Model.Products)
                                {
                                    <div class="item-box">
                                        @Html.Partial("_ProductBox", product)
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            @*grid mode*@
                            <div class="product-grid">
                                @foreach (var product in Model.Products)
                                {
                                    <div class="item-box">
                                        @Html.Partial("_ProductBox", product)
                                    </div>
                                }
                            </div>
                        }
                    }
                    <div class="pager">
                        @Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber").BooleanParameterName("as").BooleanParameterName("isc").BooleanParameterName("sid")
                    </div>
                </div>
            </div>
        </div>

    </div>